<!DOCTYPE html>
<html xmlns:th="http://www.thymeleaf.org">

<head>
    <title>Use a Deck</title>
    <script src="https://cdn.tailwindcss.com"></script>
</head>

<header>
    <nav class="flex justify-between items-center pt-4">
        <ul
            class="flex space-x-9 border border-white p-4 rounded-full bg-stone-800 text-white shadow-md mx-auto pl-12 pr-12 pb-3">
            <li> <a class="text-sm font-bold hover:text-cyan-200" href="#">ACCUEIL</a></li>
            <li><a class="text-sm font-bold text-cyan-400" href="/main/deck">FLASHCARDS</a></li>
            <li><a class="text-sm font-bold hover:text-cyan-200" href="#">EXPLORER</a></li>
            <li id="popupTrigger"><button data-modal-target="createDeck-modal"
                    data-modal-toggle="createDeck-modal"><svg class="hover:text-cyan-200"
                        xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
                        <path fill="currentColor" d="M19 12.998h-6v6h-2v-6H5v-2h6v-6h2v6h6z" />
                    </svg></button>
            </li>
        </ul>
    </nav>
</header>

<body class="bg-gray-100">
    <div th:each="flashcard , iterStat: ${flashcards}">
        <form th:id="'flashcard-' + ${iterStat.index}" th:object="${flashcard}" class="bg-white p-8 rounded shadow-md w-1/3 min-w-[300px] mx-auto block mt-10 flashcard" method="post" action="/main/flashcard/update">
            <input type="hidden" th:field="*{id}" />
            <div class="mb-4">
                <h2 th:text="${flashcard.question}"></h2>
            </div>

            
            <div class="mb-2">
                <button type="submit"
                    class="bg-black text-white font-bold py-2 px-4 rounded w-full respond-btn">RÃ©pondre</button>
            </div>
        </form>

    </div>



    <div class="bg-white p-8 rounded shadow-md w-1/3 mx-auto block mt-10 flashcard" style="display: none;">
        <p class="last-card-text" style="display: none;">You're not is...</p>
    </div>
</body>
<script>



    const queryString = window.location.search;
    const urlParams = new URLSearchParams(queryString);
    const current = urlParams.get('current')


    const flashcards = document.querySelectorAll(".flashcard");
    const respondButtons = document.querySelectorAll(".respond-btn");
    const lastCardText = document.querySelector(".last-card-text");

    let currentCardIndex = current ? parseInt(current) : 0;

    function showCard(index) {
        flashcards.forEach((card, i) => {
            if (i === index) {
                card.style.display = "block";
            } else {
                card.style.display = "none";
            }
        });

        if (index === flashcards.length - 1) {
            lastCardText.style.display = "block";
        } else {
            lastCardText.style.display = "none";
        }
    }

    showCard(currentCardIndex);

    respondButtons.forEach((button, index) => {
        button.addEventListener("click", () => {
            currentCardIndex++;
            if (currentCardIndex >= flashcards.length) {
                currentCardIndex = 0;
            }
            showCard(currentCardIndex);
        });
    });
</script>

</html>